[tox]
envlist = py37, py38, py39, py310, py311, py312, flake8, mypy, coverage
isolated_build = true

[testenv]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    responses>=0.22.0
commands = pytest {posargs}

[testenv:flake8]
deps = 
    flake8>=5.0.0
    flake8-docstrings
commands = flake8 pyhetznerserver tests

[testenv:mypy]
deps = 
    mypy>=1.0.0
    types-requests
commands = mypy pyhetznerserver --ignore-missing-imports

[testenv:black]
deps = black>=22.0.0
commands = black --check --diff pyhetznerserver tests

[testenv:isort]
deps = isort>=5.10.0
commands = isort --check-only --diff pyhetznerserver tests

[testenv:coverage]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
commands = 
    pytest --cov=pyhetznerserver --cov-report=term-missing --cov-report=html --cov-report=xml

[testenv:docs]
deps = 
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.2.0
    sphinx-autodoc-typehints>=1.19.0
commands = 
    sphinx-build -b html docs docs/_build/html

[testenv:security]
deps = 
    bandit>=1.7.0
    safety>=2.0.0
commands = 
    bandit -r pyhetznerserver/
    safety check

[flake8]
max-line-length = 100
max-complexity = 10
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv
ignore = 
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
    D100,  # Missing docstring in public module
    D104,  # Missing docstring in public package

[coverage:run]
source = pyhetznerserver
omit = 
    */tests/*
    */test_*
    setup.py

[coverage:report]
exclude_lines = 
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod 